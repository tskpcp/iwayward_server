#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace app.WebClient.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="iwayward")]
	public partial class industryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertindustry(industry instance);
    partial void Updateindustry(industry instance);
    partial void Deleteindustry(industry instance);
    #endregion
		
		public industryDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["iwaywardConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public industryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public industryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public industryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public industryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<industry> industry
		{
			get
			{
				return this.GetTable<industry>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.industry")]
	public partial class industry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IndID;
		
		private string _IndName;
		
		private System.Nullable<int> _IndChildID;
		
		private string _IndChildName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIndIDChanging(int value);
    partial void OnIndIDChanged();
    partial void OnIndNameChanging(string value);
    partial void OnIndNameChanged();
    partial void OnIndChildIDChanging(System.Nullable<int> value);
    partial void OnIndChildIDChanged();
    partial void OnIndChildNameChanging(string value);
    partial void OnIndChildNameChanged();
    #endregion
		
		public industry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IndID
		{
			get
			{
				return this._IndID;
			}
			set
			{
				if ((this._IndID != value))
				{
					this.OnIndIDChanging(value);
					this.SendPropertyChanging();
					this._IndID = value;
					this.SendPropertyChanged("IndID");
					this.OnIndIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndName", DbType="VarChar(50)")]
		public string IndName
		{
			get
			{
				return this._IndName;
			}
			set
			{
				if ((this._IndName != value))
				{
					this.OnIndNameChanging(value);
					this.SendPropertyChanging();
					this._IndName = value;
					this.SendPropertyChanged("IndName");
					this.OnIndNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndChildID", DbType="Int")]
		public System.Nullable<int> IndChildID
		{
			get
			{
				return this._IndChildID;
			}
			set
			{
				if ((this._IndChildID != value))
				{
					this.OnIndChildIDChanging(value);
					this.SendPropertyChanging();
					this._IndChildID = value;
					this.SendPropertyChanged("IndChildID");
					this.OnIndChildIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndChildName", DbType="VarChar(50)")]
		public string IndChildName
		{
			get
			{
				return this._IndChildName;
			}
			set
			{
				if ((this._IndChildName != value))
				{
					this.OnIndChildNameChanging(value);
					this.SendPropertyChanging();
					this._IndChildName = value;
					this.SendPropertyChanged("IndChildName");
					this.OnIndChildNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
